require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe GeocodedLocationsController, type: :controller do

  let(:geocoded_locations) { Fabricate.times(7, address: Faker::Address.street_address) }
  let(:valid_address_params) { }
  let(:invalid_address_params) {}

  describe 'new' do
    context 'when there are geocoded_locations in the DB' do
      it 'returns all geocoded locations' do
      end
    end
    context 'when user supplies accurate address and there is a response from the API' do
      it 'creates new instance of geocoded_locations with both longitude and latitude' do
      end
      it 'adds new instance to index list of geocoded_locations' do
      end
    end
    context 'when user supplies an address, but address is invalid and an error is returned from the API' do
      it 'does not create a new geocoded_location' do
      end
      it 're-renders the new form and gives an error' do
      end
    end
  end
end
